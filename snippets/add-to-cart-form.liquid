{% assign selected_variant = product.selected_or_first_available_variant %}

  <form id="add-to-cart-form" >
    <div class="product-price">
      {% if product.has_only_default_variant %}
      <span class="text-lg">{{ selected_variant.price | money }}</span>
        <span class="text-base text-gray-500 line-through">{{ selected_variant.compare_at_price | money }}</span>
      {% else %}
      <div class="sale-box" v-if="variant_price < compare_at_price">
        <h6><mark>SALE</mark></h6>
        <p>${ money(variant_price) } {{ shop.currency }}</p>
       <span>${ money(compare_at_price)} {{ shop.currency }}</span>
      </div>
      <div v-else>
        <p >${ money(variant_price) } {{ shop.currency }}</p>
      </div>
      {% endif %}
      <!-- {% if selected_variant.price < selected_variant.compare_at_price %}
          <span class="px-5 py-1 text-sm font-bold bg-red-500 rounded-full text-white mx-4">Sale</span>
      {% endif %} -->
    </div>
    <div class="product-bottom">
      <div class="product-description">
        {{ product.description }}
      </div>
    {% unless product.has_only_default_variant %}
      <template v-for="(option, i) in form.options" :key="i">
        <div>
          {% render 'product-option-row' %}
        </div>
      </template>


    {% endunless %}

    <div class="my-3 product-q">
      <label for="Quantity-{{ section.id }}">Quantity: </label>

      <div class="my-2">
          <input type="number" name="quantity" id="Quantity-{{ section.id }}"  min="1" v-model.number="quantity" class="w-full border px-3 py-3">
      </div>
    </div>

    <button @click="addToCart" type="submit" name="add" class="add-to-cart-button">Add to cart</button>
    <!-- ${ variant } -->
  </form>

  <script>
      if (document.querySelector('#add-to-cart-form'))
      {
          const productFrom = Vue.createApp({
            //what's inside these - contains vue
            delimiters: ['${', '}'],
            data(){
                return {
                    open: false,
                    variants: "",
                    quantity: 1,
                    selected: [],
                    variant_price: "{{ product.selected_or_first_available_variant.price }}",
                    compare_at_price: "{{ product.selected_or_first_available_variant.compare_at_price }}" ? "{{ product.selected_or_first_available_variant.compare_at_price }}" : 0 ,
                    form: {
                      selections: "",
                      options: ""
                    },
       
                }
            },
            created() {
                axios.get("/products/{{ product.handle }}.js")
                .then(results => {
                    this.form.options = results.data.options.map(item => ({...item, visible: false}))
                    this.variants = results.data.variants
                    results.data.options.map(item => this.selected.push(item.values[0]))
                    this.form.selections = [
                      this.selected[0] ? this.selected[0] : null,
                      this.selected[1] ? this.selected[1] : null,
                      this.selected[2] ? this.selected[2] : null                     
                    ]
                })
            },
            methods:{
                addToCart(event) {
                    event.preventDefault();
                    let selectedVariant 
                    this.variants.forEach((variant, i) => {
                      // console.log(variant)
                      if (variant.option1 === this.form.selections[0] && variant.option2 === this.form.selections[1]
                       && variant.option3 === this.form.selections[2])
                       {
                         selectedVariant = variant
                       }
                    })

                    let data = {
                        id: selectedVariant.id,
                        quantity: this.quantity
                    }

                    axios.post('/cart/add.js', data)
                        .then((response) => {
                          // Have to refresh the cart after the post request
                            store.getCart()

                        })
                        .then( () => {
                          toggleMiniCart.openCart()
                            setTimeout(() =>  toggleClose.closeAll(), 3000);
                        })
                        .catch(error => {
                            console.log(error)
                        })
                        
                },
                // Due to working with data, I have to update the information of selected variant and swiper location too
                changePrice(){

                  let selectedVariant 
                    this.variants.forEach((variant, i) => {
                      // console.log(variant)
                      if (variant.option1 === this.form.selections[0] && variant.option2 === this.form.selections[1]
                       && variant.option3 === this.form.selections[2])
                       {
                         selectedVariant = variant
                       }
                    })

                    this.variant_price = selectedVariant.price
                    if (selectedVariant.compare_at_price != null)
                    {
                      this.compare_at_price = selectedVariant.compare_at_price
                    } else{
                      this.compare_at_price = 0;
                    }
    

                    if(selectedVariant.featured_image != null) {
                    swiper.slideTo(selectedVariant.featured_image.position)
                    } else{
                      swiper.slideTo(1)
                    }
                    
                },
                money(value){
                if(!value) return 0
                return (value/100).toFixed(2)
              },

            },

          }).mount('#add-to-cart-form')
      }
  </script>




